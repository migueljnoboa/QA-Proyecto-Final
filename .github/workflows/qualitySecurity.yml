name: Quality & Security Pipeline

on:
  push:
    branches: [ "dev" ]
  pull_request:

jobs:
  qodana:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      checks: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Qodana Scan
        uses: JetBrains/qodana-action@v2025.1
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}
        with:
          args: --results-dir=qodana/results
      - name: Upload Qodana Report
        uses: actions/upload-artifact@v3
        with:
          name: qodana-report
          path: qodana/results/report.html

  snyk:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Run Snyk Scan
        uses: snyk/actions/gradle@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high --sarif-file-output=snyk.sarif

      - name: Upload Snyk Report to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk.sarif

  zap:
    runs-on: ubuntu-latest
    needs: [snyk, qodana]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build and run application
        run: ./gradlew bootRun &

      - name: Wait for app
        run: |
          echo "Esperando..."
          for i in {1..30}; do
            if curl -s http://127.0.0.1:8080 > /dev/null; then
              echo "App is up!"
              exit 0
            fi
            sleep 5
          done
          echo "App did not start in time" && exit 1

      - name: Run OWASP ZAP Full Scan
        run: |
          docker run --rm \
            -v $(pwd):/zap/wrk/:rw \
            --network="host" \
            zaproxy/zap-stable \
            zap-full-scan.py \
            -t http://127.0.0.1:8080 \
            -r zap_full_report.html || true

      - name: Upload ZAP Report
        uses: actions/upload-artifact@v3
        with:
          name: zap-report
          path: zap_full_report.html
