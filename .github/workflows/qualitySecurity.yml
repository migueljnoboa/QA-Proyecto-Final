name: Quality & Security (Qodana + Snyk + ZAP)

on:
  push:
    branches: [ dev ]
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  security-events: write

jobs:
  qodana:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    environment: enviroments   # <-- your Environment name
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
          fetch-depth: 0

      - name: Qodana Scan (Cloud if token, else Community)
        uses: JetBrains/qodana-action@v2025.1
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}
        with:
          project-dir: inventario
          args: >-
            --results-dir=qodana/results
            ${{ secrets.QODANA_TOKEN == '' && '--linter=jetbrains/qodana-jvm-community:2025.1' || '' }}

      - name: Upload Qodana HTML
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: qodana-report
          path: qodana/results/report/
          if-no-files-found: warn

      - name: Upload Qodana SARIF (if present)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: qodana-sarif
          path: |
            qodana/results/qodana.sarif.json
            qodana/results/**/qodana.sarif.json
          if-no-files-found: warn

      - name: Upload Qodana logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: qodana-logs
          path: qodana/results/logs/
          if-no-files-found: warn

  snyk:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    environment: enviroments
    defaults:
      run:
        working-directory: inventario
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: gradle

      - name: Make Gradle wrapper executable
        run: chmod +x ./gradlew

      - name: Build (no tests)
        run: ./gradlew --no-daemon build -x test

      - name: Run Snyk (Gradle)
        uses: snyk/actions/gradle@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high --sarif-file-output=snyk.sarif

      - name: Upload Snyk SARIF to Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: inventario/snyk.sarif

      - name: Upload Snyk file (artifact)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: snyk-sarif
          path: inventario/snyk.sarif
          if-no-files-found: warn

  zap:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    needs: [qodana, snyk]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: gradle

      - name: Make Gradle wrapper executable
        working-directory: inventario
        run: chmod +x ./gradlew

      - name: Build app (no tests)
        working-directory: inventario
        run: ./gradlew --no-daemon build -x test

      - name: Start app and run OWASP ZAP Full Scan
        run: |
          nohup java -jar inventario/build/libs/*.jar > app.log 2>&1 &
          echo "Waiting for app..."
